#!/usr/bin/env python

__author__ = 'Darrien'

# sys is needed to skip the python script when updating
# os is needed for changing the working directory, and making folders
import sys
import os


# Kills the script in order to return to the bash script that called it.
def update_kill():
    print "Killing main script..."
    sys.exit("Updating... ")


# Creates a folder if there is none already there
# Also returns the path to the final folder created
def folder_creation(sub_dir, appender):
    # Using the subdirectory obtained in the main method, gets the full directory path
    filename = "/var/www/F14Courses/" + str(sub_dir)
    
    filename += "/Assignment" + appender

    # Checks to see if the folder already exists
    if not os.path.exists(filename):
        os.makedirs(filename)
        print "Folder: \'Assignment" + appender + "\' created."
        return filename
    else:
        print "Folder already exists. Folder not created."
        return filename


# Creates how_many number of assignments using an outline
# how_many = number of assignments wanted, a_num = assignment number
def assignment_creator(how_many, a_num, script_ver):
    thing = int(how_many)
    safe_text = open("safe_text.txt", "w")
    safe_text.write(how_many)

    start = "Assignment" + a_num + "pe"

    # Loop to make assignments until how_many
    for i in range(thing):
        thing = i + 1
        if thing < 10:
            ender = "0" + str(thing)
        else:
            ender = str(thing)

        file_name = str(start + ender + ".c")

        # Checking to see if file exists - will not overwrite files already there
        if os.path.exists(file_name):
            print "%s exists. New file not created." % file_name
        else:
            line = "/*****************************************************/\n"
            filler = "/*" + " "*51 + "*/\n"
            new_file = open(file_name, "w")
            new_file.write(line)
            new_file.write("/* Programmer: Darrien Bradley Glasser               */\n")
            new_file.write(filler)
            new_file.write("/* Program: Assignment " + str(i + 1) + "                             */\n")
            new_file.write(filler)
            new_file.write("/* Approximate Completion Time: TO BE FILLED         */\n")
            new_file.write(line)
            new_file.write("\n/*\nEnter description of program here.\n*/\n")
            new_file.write("\n#include <stdio.h>\n\n")
            new_file.write("int main(int argc, char*argv[]){\n")
            new_file.write("\n\n\treturn 0;\n}")
            new_file.write("\n\n/* Headers autogenerated by Darrien's Server Automation Script version: " + script_ver + " */")
            new_file.close()
            print "New file " + file_name + " created."


# Modifies existing HTML files, and generates new ones in order to display all files on darrieng.raspctl.com
# how_many = num of assignments, a_num = assignment number, direc = 101, 102, etc.
def html_gen(how_many, a_num, direc, script_ver):
    # 'big_file' is the file that will contain all parts of the final HTML file
    # 'top' contains the headers, 'links' contain links to the assignment folders, 'bottom' contains the closing tags
    # VERY IMPORTANT: links must not be opened in a+, will be filled with garbage otherwise. See C: I/O bug
    direc = str(direc)
    big_file = open(direc + ".html", "w")
    top = open("top.html", "r")
    links = open("links.html", "a")
    bottom = open("bottom.html", "r")

    print "Modding: " + direc + ".html"

    # Appending new assignment to links.html
    links.write("<li><a href=\"/F14Courses/" + direc + "/Assignment" + a_num + ".html\">Assignment" + a_num + "</a></li>")
    links.close()
    links = open("links.html", "r")

    # Adding top, links, and bottom together to make the final file
    big_file.write(top.read())
    big_file.write(links.read())
    big_file.write(bottom.read())
    big_file.close(); top.close(); links.close(); bottom.close()
    print "File modifications completed."

    # Move to directory with new assignments in it
    os.chdir("Assignment" + a_num)

    # Generating new HTML file in AssignmentXX folder pointing towards assignments
    # Printing periods signifies that the server has not frozen
    print "Creating Assignment" + a_num + ".html"
    new_assignment = open("Assignment" + a_num + ".html", "w")
    print ".",

    new_assignment.write("<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n")
    new_assignment.write("<html>\n")
    new_assignment.write(" <head>\n")
    new_assignment.write("  <title>\n")
    new_assignment.write("    Assignment" + a_num)
    new_assignment.write("  </title>\n")
    new_assignment.write("  </head>\n")
    new_assignment.write("  <body>\n")
    new_assignment.write("   <h1>\n")
    new_assignment.write("    Assignment" + a_num + "\n")
    new_assignment.write("   </h1>\n")
    new_assignment.write("   <nav>\n")
    new_assignment.write("     <ul>")
    print ".",

    # Adding as many links as the user asked for
    for i in range(int(how_many)):
        thing = i + 1
        if thing < 10:
            num = "0" + str(thing)
        new_assignment.write("\n")
        new_assignment.write("<li><a href=\"/F14Courses/101/Assignment" + a_num + "pe" + num +
                             ".c\">Assignment" + a_num + "pe" + num + "</a></li>")
        new_assignment.write("\n")
        print ".",

    new_assignment.write("\n     </ul>\n")
    new_assignment.write("   <nav>\n")
    new_assignment.write("<p>Page autogenerated by Darrien's Server Automation Script version: " + script_ver + "</p>\n")
    new_assignment.write("  </body>\n")
    new_assignment.write("</html>\n")
    new_assignment.close()
    print "\nAssignment" + a_num + ".html created."
    print "HTML file generation completed."


if __name__ == "__main__":
    # Opening print statements
    script_ver = "0.2.7"
    print "\n\n#######################################\n"
    print "Server Automation Script version: " + script_ver
    print "BETA VERSION: Script works, but may have odd quirks."
    print "\n#######################################\n"
    print "Welcome back Darrien!"

    # Setting directory to root for easy switching
    # retval will also save this directory for later
    os.chdir("..")
    retval = os.getcwd()

    # 'u' will kill the script, and go straight to the bash script for updating all files
    # 'F1' corresponds to Freshman year semester I. This pattern is expected to be carried forward
    while True:
        folder = raw_input("'u' = update or Y/Semester #\n> ")

        if folder not in ("u", "F1", "f1", "F2", "f2"):
            print "Typo. Please enter input again."
        else:
            break

    if folder == 'u':
        update_kill()

    print "Please enter the assignment number."
    a_num = raw_input("> ")

    if a_num < 10:
        appender = "0" + str(a_num)
    else:
        appender = str(a_num)

    print "How many assignments?"
    how_many = raw_input("> ")

    if folder in ("f1", "F1"):
        direc = 101
    elif folder in ("f2", "F2"):
        direc = 102
    else:
        f_path = "NOOOOOOOOOOOOOOO"
        print "This should not happen. Spontaneous failure"
        sys.exit("FAILURE")

    # Creating a folder for the new assignment, and then returning the path to it in f_path (file_path)
    f_path = folder_creation(direc, appender)

    # Change directory to inside newly created folder, then create as many files as the user asked for
    os.chdir(f_path)
    assignment_creator(how_many, appender, script_ver)

    # A file read/created in assignment_creator
    # Assures that an HTML file with more assignments is not overwritten with an HTML file with fewer assignments
    safe_text = open("safe_text.txt")
    occupied = safe_text.read()

    if occupied < how_many:
        print "Number of assignments wanted is less than number of assignments created."
        sys.exit("Skipping HTML gen script.")

    # Moving up one directory from AssignmentXXpeXX to 101 or 102 or 1XX
    os.chdir("..")

    # Running the HTML file generation/modification method
    html_gen(how_many, appender, direc, script_ver)
